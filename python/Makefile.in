# Makefile to compile the module in this directory

SOURCES = $(wildcard *.cpp)
LIBRARIES = _rdfamodule
DYNAMIC_LINK_LIBRARIES = rdfa expat
DYNAMIC_WINDOWS_LIBRARIES = 

# ----------- Standard Makefile
#include @RDFADIR@/setup/Makefile.base
.PHONY: build-objects build-libraries clean all

all: build-objects build-libraries

directories:
	mkdir -p build
	mkdir -p dist

dist/python%-rdfa.so: build/RdfaParser.o build/SwigRdfaParser-python%.o
	echo "Building $@..."
	g++ -shared -L ../libs -o dist/python$*-rdfa.so build/RdfaParser.o build/SwigRdfaParser-python$*.o -lrdfa

dist/_rdfa.so: dist/python$(PY_DEFAULT)-rdfa.so
	ln -sf $(notdir $<) $@

build/SwigRdfaParser.cpp: rdfa.i
	echo "Generating $@ (from rdfa.i)..."
	swig -c++ -I. -python -o build/SwigRdfaParser.cpp rdfa.i
	cp build/rdfa.py dist

build/SwigRdfaParser-python%.o: build/SwigRdfaParser.cpp
	echo "Building $@..."
	g++ -g -c -I../c -I. -I/usr/include/python$* build/SwigRdfaParser.cpp -o build/SwigRdfaParser-python$*.o

build/RdfaParser.o:
	echo "Building $@..."
	cd build && ln -sf ../RdfaParser.cpp RdfaParser.cpp
	g++ -g -c -I../c -I. build/RdfaParser.cpp -o build/RdfaParser.o

build-objects: \
	directories \
	$(PY_VERSIONS:%=build/SwigRdfaParser-python%.o) \
	build/RdfaParser.o

build-libraries: \
	directories \
	$(PY_VERSIONS:%=dist/python%-rdfa.so) \
	dist/_rdfa.so

build-executables:

clean:
	rm -rf build
	rm -rf dist
